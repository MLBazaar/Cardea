from .fhirbase import fhirbase


class ElementDefinition(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # the path identifies the element and is expressed as a "."-separated list
        # of ancestor elements, beginning with the name of the resource or
        # extension.
        self.path = None
        # type = string

        # codes that define how this element is represented in instances, when the
        # deviation varies from the normal case.
        self.representation = None
        # type = array
        # possible values: xmlAttr, xmlText, typeAttr, cdaText, xhtml

        # the name of this element definition slice, when slicing is working. the
        # name must be a token with no dots or spaces. this is a unique name
        # referring to a specific set of constraints applied to this element, used
        # to provide a name to different slices of the same element.
        self.sliceName = None
        # type = string

        # a single preferred label which is the text to display beside the element
        # indicating its meaning or to use to prompt for the element in a user
        # display or form.
        self.label = None
        # type = string

        # a code that has the same meaning as the element in a particular
        # terminology.
        self.code = None
        # type = array
        # reference to Coding: Coding

        # indicates that the element is sliced into a set of alternative
        # definitions (i.e. in a structure definition, there are multiple
        # different constraints on a single element in the base resource). slicing
        # can be used in any resource that has cardinality ..* on the base
        # resource, or any resource with a choice of types. the set of slices is
        # any elements that come after this in the element sequence that have the
        # same path, until a shorter path occurs (the shorter path terminates the
        # set).
        self.slicing = None
        # reference to ElementDefinition_Slicing: ElementDefinition_Slicing

        # a concise description of what this element means (e.g. for use in
        # autogenerated summaries).
        self.short = None
        # type = string

        # provides a complete explanation of the meaning of the data element for
        # human readability.  for the case of elements derived from existing
        # elements (e.g. constraints), the definition shall be consistent with the
        # base definition, but convey the meaning of the element in the particular
        # context of use of the resource.
        self.definition = None
        # type = string

        # explanatory notes and implementation guidance about the data element,
        # including notes about how to use the data properly, exceptions to proper
        # use, etc.
        self.comment = None
        # type = string

        # this element is for traceability of why the element was created and why
        # the constraints exist as they do. this may be used to point to source
        # materials or specifications that drove the structure of this element.
        self.requirements = None
        # type = string

        # identifies additional names by which this element might also be known.
        self.alias = None
        # type = array

        # the minimum number of times this element shall appear in the instance.
        self.min = None
        # type = int

        # the maximum number of times this element is permitted to appear in the
        # instance.
        self.max = None
        # type = string

        # information about the base definition of the element, provided to make
        # it unnecessary for tools to trace the deviation of the element through
        # the derived and related profiles. this information is provided when the
        # element definition is not the original definition of an element - i.g.
        # either in a constraint on another type, or for elements from a super
        # type in a snap shot.
        self.base = None
        # reference to ElementDefinition_Base: ElementDefinition_Base

        # identifies the identity of an element defined elsewhere in the profile
        # whose content rules should be applied to the current element.
        self.contentReference = None
        # type = string

        # the data type or resource that the value of this element is permitted to
        # be.
        self.type = None
        # type = array
        # reference to ElementDefinition_Type: ElementDefinition_Type

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueBoolean = None
        # type = boolean

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueInteger = None
        # type = int

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDecimal = None
        # type = int

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueBase64Binary = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueInstant = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueString = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueUri = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDate = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDateTime = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueTime = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueCode = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueOid = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueUuid = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueId = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueUnsignedInt = None
        # type = int

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValuePositiveInt = None
        # type = int

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueMarkdown = None
        # type = string

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueElement = None
        # reference to Element: id

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueExtension = None
        # reference to Extension: Extension

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueBackboneElement = None
        # reference to BackboneElement: BackboneElement

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueNarrative = None
        # reference to Narrative: Narrative

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueAnnotation = None
        # reference to Annotation: Annotation

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueAttachment = None
        # reference to Attachment: Attachment

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueIdentifier = None
        # reference to Identifier: Identifier

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueCodeableConcept = None
        # reference to CodeableConcept: CodeableConcept

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueCoding = None
        # reference to Coding: Coding

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueQuantity = None
        # reference to Quantity: Quantity

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDuration = None
        # reference to Duration: Duration

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueSimpleQuantity = None
        # reference to Quantity: Quantity

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDistance = None
        # reference to Distance: Distance

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueCount = None
        # reference to Count: Count

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueMoney = None
        # reference to Money: Money

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueAge = None
        # reference to Age: Age

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueRange = None
        # reference to Range: Range

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValuePeriod = None
        # reference to Period: Period

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueRatio = None
        # reference to Ratio: Ratio

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueReference = None
        # reference to Reference: identifier

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueSampledData = None
        # reference to SampledData: SampledData

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueSignature = None
        # reference to Signature: Signature

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueHumanName = None
        # reference to HumanName: HumanName

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueAddress = None
        # reference to Address: Address

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueContactPoint = None
        # reference to ContactPoint: ContactPoint

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueTiming = None
        # reference to Timing: Timing

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueMeta = None
        # reference to Meta: Meta

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueElementDefinition = None
        # reference to ElementDefinition: ElementDefinition

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueContactDetail = None
        # reference to ContactDetail: ContactDetail

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueContributor = None
        # reference to Contributor: Contributor

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDosage = None
        # reference to Dosage: Dosage

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueRelatedArtifact = None
        # reference to RelatedArtifact: RelatedArtifact

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueUsageContext = None
        # reference to UsageContext: UsageContext

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueDataRequirement = None
        # reference to DataRequirement: DataRequirement

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueParameterDefinition = None
        # reference to ParameterDefinition: ParameterDefinition

        # the value that should be used if there is no value stated in the
        # instance (e.g. 'if not otherwise specified, the abstract is false').
        self.defaultValueTriggerDefinition = None
        # reference to TriggerDefinition: TriggerDefinition

        # the implicit meaning that is to be understood when this element is
        # missing (e.g. 'when this element is missing, the period is ongoing'.
        self.meaningWhenMissing = None
        # type = string

        # if present, indicates that the order of the repeating element has
        # meaning and describes what that meaning is.  if absent, it means that
        # the order of the element has no meaning.
        self.orderMeaning = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedBoolean = None
        # type = boolean

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedInteger = None
        # type = int

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDecimal = None
        # type = int

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedBase64Binary = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedInstant = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedString = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedUri = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDate = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDateTime = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedTime = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedCode = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedOid = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedUuid = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedId = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedUnsignedInt = None
        # type = int

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedPositiveInt = None
        # type = int

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedMarkdown = None
        # type = string

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedElement = None
        # reference to Element: id

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedExtension = None
        # reference to Extension: Extension

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedBackboneElement = None
        # reference to BackboneElement: BackboneElement

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedNarrative = None
        # reference to Narrative: Narrative

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedAnnotation = None
        # reference to Annotation: Annotation

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedAttachment = None
        # reference to Attachment: Attachment

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedIdentifier = None
        # reference to Identifier: Identifier

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedCodeableConcept = None
        # reference to CodeableConcept: CodeableConcept

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedCoding = None
        # reference to Coding: Coding

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedQuantity = None
        # reference to Quantity: Quantity

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDuration = None
        # reference to Duration: Duration

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedSimpleQuantity = None
        # reference to Quantity: Quantity

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDistance = None
        # reference to Distance: Distance

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedCount = None
        # reference to Count: Count

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedMoney = None
        # reference to Money: Money

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedAge = None
        # reference to Age: Age

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedRange = None
        # reference to Range: Range

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedPeriod = None
        # reference to Period: Period

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedRatio = None
        # reference to Ratio: Ratio

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedReference = None
        # reference to Reference: identifier

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedSampledData = None
        # reference to SampledData: SampledData

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedSignature = None
        # reference to Signature: Signature

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedHumanName = None
        # reference to HumanName: HumanName

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedAddress = None
        # reference to Address: Address

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedContactPoint = None
        # reference to ContactPoint: ContactPoint

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedTiming = None
        # reference to Timing: Timing

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedMeta = None
        # reference to Meta: Meta

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedElementDefinition = None
        # reference to ElementDefinition: ElementDefinition

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedContactDetail = None
        # reference to ContactDetail: ContactDetail

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedContributor = None
        # reference to Contributor: Contributor

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDosage = None
        # reference to Dosage: Dosage

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedRelatedArtifact = None
        # reference to RelatedArtifact: RelatedArtifact

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedUsageContext = None
        # reference to UsageContext: UsageContext

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedDataRequirement = None
        # reference to DataRequirement: DataRequirement

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedParameterDefinition = None
        # reference to ParameterDefinition: ParameterDefinition

        # specifies a value that shall be exactly the value  for this element in
        # the instance. for purposes of comparison, non-significant whitespace is
        # ignored, and all values must be an exact match (case and accent
        # sensitive). missing elements/attributes must also be missing.
        self.fixedTriggerDefinition = None
        # reference to TriggerDefinition: TriggerDefinition

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternBoolean = None
        # type = boolean

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternInteger = None
        # type = int

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDecimal = None
        # type = int

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternBase64Binary = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternInstant = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternString = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternUri = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDate = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDateTime = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternTime = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternCode = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternOid = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternUuid = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternId = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternUnsignedInt = None
        # type = int

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternPositiveInt = None
        # type = int

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternMarkdown = None
        # type = string

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternElement = None
        # reference to Element: id

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternExtension = None
        # reference to Extension: Extension

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternBackboneElement = None
        # reference to BackboneElement: BackboneElement

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternNarrative = None
        # reference to Narrative: Narrative

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternAnnotation = None
        # reference to Annotation: Annotation

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternAttachment = None
        # reference to Attachment: Attachment

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternIdentifier = None
        # reference to Identifier: Identifier

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternCodeableConcept = None
        # reference to CodeableConcept: CodeableConcept

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternCoding = None
        # reference to Coding: Coding

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternQuantity = None
        # reference to Quantity: Quantity

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDuration = None
        # reference to Duration: Duration

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternSimpleQuantity = None
        # reference to Quantity: Quantity

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDistance = None
        # reference to Distance: Distance

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternCount = None
        # reference to Count: Count

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternMoney = None
        # reference to Money: Money

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternAge = None
        # reference to Age: Age

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternRange = None
        # reference to Range: Range

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternPeriod = None
        # reference to Period: Period

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternRatio = None
        # reference to Ratio: Ratio

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternReference = None
        # reference to Reference: identifier

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternSampledData = None
        # reference to SampledData: SampledData

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternSignature = None
        # reference to Signature: Signature

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternHumanName = None
        # reference to HumanName: HumanName

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternAddress = None
        # reference to Address: Address

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternContactPoint = None
        # reference to ContactPoint: ContactPoint

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternTiming = None
        # reference to Timing: Timing

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternMeta = None
        # reference to Meta: Meta

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternElementDefinition = None
        # reference to ElementDefinition: ElementDefinition

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternContactDetail = None
        # reference to ContactDetail: ContactDetail

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternContributor = None
        # reference to Contributor: Contributor

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDosage = None
        # reference to Dosage: Dosage

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternRelatedArtifact = None
        # reference to RelatedArtifact: RelatedArtifact

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternUsageContext = None
        # reference to UsageContext: UsageContext

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternDataRequirement = None
        # reference to DataRequirement: DataRequirement

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternParameterDefinition = None
        # reference to ParameterDefinition: ParameterDefinition

        # specifies a value that the value in the instance shall follow - that is,
        # any value in the pattern must be found in the instance. other additional
        # values may be found too. this is effectively constraint by example.  the
        # values of elements present in the pattern must match exactly (case-
        # sensitive, accent-sensitive, etc.).
        self.patternTriggerDefinition = None
        # reference to TriggerDefinition: TriggerDefinition

        # a sample value for this element demonstrating the type of information
        # that would typically be found in the element.
        self.example = None
        # type = array
        # reference to ElementDefinition_Example: ElementDefinition_Example

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueDate = None
        # type = string

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueDateTime = None
        # type = string

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueInstant = None
        # type = string

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueTime = None
        # type = string

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueDecimal = None
        # type = int

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueInteger = None
        # type = int

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValuePositiveInt = None
        # type = int

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueUnsignedInt = None
        # type = int

        # the minimum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.minValueQuantity = None
        # reference to Quantity: Quantity

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueDate = None
        # type = string

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueDateTime = None
        # type = string

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueInstant = None
        # type = string

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueTime = None
        # type = string

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueDecimal = None
        # type = int

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueInteger = None
        # type = int

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValuePositiveInt = None
        # type = int

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueUnsignedInt = None
        # type = int

        # the maximum allowed value for the element. the value is inclusive. this
        # is allowed for the types date, datetime, instant, time, decimal,
        # integer, and quantity.
        self.maxValueQuantity = None
        # reference to Quantity: Quantity

        # indicates the maximum length in characters that is permitted to be
        # present in conformant instances and which is expected to be supported by
        # conformant consumers that support the element.
        self.maxLength = None
        # type = int

        # a reference to an invariant that may make additional statements about
        # the cardinality or value in the instance.
        self.condition = None
        # type = array

        # formal constraints such as co-occurrence and other constraints that can
        # be computationally evaluated within the context of the instance.
        self.constraint = None
        # type = array
        # reference to ElementDefinition_Constraint: ElementDefinition_Constraint

        # if true, implementations that produce or consume resources shall provide
        # "support" for the element in some meaningful way.  if false, the element
        # may be ignored and not supported.
        self.mustSupport = None
        # type = boolean

        # if true, the value of this element affects the interpretation of the
        # element or resource that contains it, and the value of the element
        # cannot be ignored. typically, this is used for status, negation and
        # qualification codes. the effect of this is that the element cannot be
        # ignored by systems: they shall either recognize the element and process
        # it, and/or a pre-determination has been made that it is not relevant to
        # their particular system.
        self.isModifier = None
        # type = boolean

        # whether the element should be included if a client requests a search
        # with the parameter _summary=true.
        self.isSummary = None
        # type = boolean

        # binds to a value set if this element is coded (code, coding,
        # codeableconcept, quantity), or the data types (string, uri).
        self.binding = None
        # reference to ElementDefinition_Binding: ElementDefinition_Binding

        # identifies a concept from an external specification that roughly
        # corresponds to this element.
        self.mapping = None
        # type = array
        # reference to ElementDefinition_Mapping: ElementDefinition_Mapping

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.representation is not None:
            for value in self.representation:
                if value is not None and value.lower() not in [
                        'xmlattr', 'xmltext', 'typeattr', 'cdatext', 'xhtml']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'xmlAttr, xmlText, typeAttr, cdaText, xhtml'))

    def get_relationships(self):

        return [
            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternNarrative'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAnnotation'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueHumanName'},

            {'parent_entity': 'ElementDefinition_Base',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'base'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedBackboneElement'},

            {'parent_entity': 'ElementDefinition_Slicing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'slicing'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContactDetail'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedTiming'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternQuantity'},

            {'parent_entity': 'ElementDefinition_Type',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'type'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContactPoint'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDistance'},

            {'parent_entity': 'ElementDefinition_Mapping',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'mapping'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueMoney'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDataRequirement'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternHumanName'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'code'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedExtension'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSampledData'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRatio'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAnnotation'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedParameterDefinition'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternElementDefinition'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCodeableConcept'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCoding'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternExtension'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDosage'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAddress'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDistance'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRatio'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAttachment'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValuePeriod'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAge'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternParameterDefinition'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContributor'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueElementDefinition'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedIdentifier'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'maxValueQuantity'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueDuration'},

            {'parent_entity': 'ElementDefinition_Binding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'binding'},

            {'parent_entity': 'ElementDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedElementDefinition'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDuration'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAddress'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueNarrative'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContactDetail'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueReference'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSampledData'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContributor'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueParameterDefinition'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAnnotation'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAttachment'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDataRequirement'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRange'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueExtension'},

            {'parent_entity': 'ElementDefinition_Example',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'example'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCount'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternMoney'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSignature'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedNarrative'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueTriggerDefinition'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternElement'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternTriggerDefinition'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAttachment'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternBackboneElement'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueQuantity'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueBackboneElement'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternAge'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedCoding'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCodeableConcept'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSimpleQuantity'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternUsageContext'},

            {'parent_entity': 'ElementDefinition_Constraint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'constraint'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCount'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSimpleQuantity'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedPeriod'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedTriggerDefinition'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueElement'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRelatedArtifact'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedHumanName'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDuration'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedUsageContext'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedMeta'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDosage'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDosage'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueTiming'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternReference'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternCoding'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContactDetail'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'minValueQuantity'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRelatedArtifact'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedDistance'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternMeta'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueRange'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedRange'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedElement'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueUsageContext'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedQuantity'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedMoney'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCount'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedContactPoint'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueContributor'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternTiming'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedReference'},

            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRelatedArtifact'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternContactPoint'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueIdentifier'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternDataRequirement'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueCodeableConcept'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternPeriod'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSampledData'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueMeta'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueAge'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'defaultValueSimpleQuantity'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternSignature'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedSignature'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternIdentifier'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'patternRatio'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition',
             'child_variable': 'fixedAddress'},
        ]


class ElementDefinition_Slicing(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # designates which child elements are used to discriminate between the
        # slices when processing an instance. if one or more discriminators are
        # provided, the value of the child elements in the instance data shall
        # completely distinguish which slice the element in the resource matches
        # based on the allowed values for those elements in each of the slices.
        self.discriminator = None
        # type = array
        # reference to ElementDefinition_Discriminator: ElementDefinition_Discriminator

        # a human-readable text description of how the slicing works. if there is
        # no discriminator, this is required to be present to provide whatever
        # information is possible about how the slices can be differentiated.
        self.description = None
        # type = string

        # if the matching elements have to occur in the same order as defined in
        # the profile.
        self.ordered = None
        # type = boolean

        # whether additional slices are allowed or not. when the slices are
        # ordered, profile authors can also say that additional slices are only
        # allowed at the end.
        self.rules = None
        # type = string
        # possible values: closed, open, openAtEnd

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.rules is not None:
            for value in self.rules:
                if value is not None and value.lower() not in [
                        'closed', 'open', 'openatend']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'closed, open, openAtEnd'))

    def get_relationships(self):

        return [
            {'parent_entity': 'ElementDefinition_Discriminator',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Slicing',
             'child_variable': 'discriminator'},
        ]


class ElementDefinition_Discriminator(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # how the element value is interpreted when discrimination is evaluated.
        self.type = None
        # type = string
        # possible values: value, exists, pattern, type, profile

        # a fhirpath expression, using a restricted subset of fhirpath, that is
        # used to identify the element on which discrimination is based.
        self.path = None
        # type = string

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.type is not None:
            for value in self.type:
                if value is not None and value.lower() not in [
                        'value', 'exists', 'pattern', 'type', 'profile']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'value, exists, pattern, type, profile'))


class ElementDefinition_Base(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # the path that identifies the base element - this matches the
        # elementdefinition.path for that element. across fhir, there is only one
        # base definition of any element - that is, an element definition on a
        # [[[structuredefinition]]] without a structuredefinition.base.
        self.path = None
        # type = string

        # minimum cardinality of the base element identified by the path.
        self.min = None
        # type = int

        # maximum cardinality of the base element identified by the path.
        self.max = None
        # type = string

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)


class ElementDefinition_Type(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # url of data type or resource that is a(or the) type used for this
        # element. references are urls that are relative to
        # http://hl7.org/fhir/structuredefinition e.g. "string" is a reference to
        # http://hl7.org/fhir/structuredefinition/string. absolute urls are only
        # allowed in logical models.
        self.code = None
        # type = string

        # identifies a profile structure or implementation guide that shall hold
        # for the datatype this element refers to. can be a local reference - to a
        # contained structuredefinition, or a reference to another
        # structuredefinition or implementation guide by a canonical url. when an
        # implementation guide is specified, the resource shall conform to at
        # least one profile defined in the implementation guide.
        self.profile = None
        # type = string

        # identifies a profile structure or implementation guide that shall hold
        # for the target of the reference this element refers to. can be a local
        # reference - to a contained structuredefinition, or a reference to
        # another structuredefinition or implementation guide by a canonical url.
        # when an implementation guide is specified, the resource shall conform to
        # at least one profile defined in the implementation guide.
        self.targetProfile = None
        # type = string

        # if the type is a reference to another resource, how the resource is or
        # can be aggregated - is it a contained resource, or a reference, and if
        # the context is a bundle, is it included in the bundle.
        self.aggregation = None
        # type = array
        # possible values: contained, referenced, bundled

        # whether this reference needs to be version specific or version
        # independent, or whether either can be used.
        self.versioning = None
        # type = string
        # possible values: either, independent, specific

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.aggregation is not None:
            for value in self.aggregation:
                if value is not None and value.lower() not in [
                        'contained', 'referenced', 'bundled']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'contained, referenced, bundled'))

        if self.versioning is not None:
            for value in self.versioning:
                if value is not None and value.lower() not in [
                        'either', 'independent', 'specific']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'either, independent, specific'))


class ElementDefinition_Example(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # describes the purpose of this example amoung the set of examples.
        self.label = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueBoolean = None
        # type = boolean

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueInteger = None
        # type = int

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDecimal = None
        # type = int

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueBase64Binary = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueInstant = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueString = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueUri = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDate = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDateTime = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueTime = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueCode = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueOid = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueUuid = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueId = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueUnsignedInt = None
        # type = int

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valuePositiveInt = None
        # type = int

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueMarkdown = None
        # type = string

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueElement = None
        # reference to Element: id

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueExtension = None
        # reference to Extension: Extension

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueBackboneElement = None
        # reference to BackboneElement: BackboneElement

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueNarrative = None
        # reference to Narrative: Narrative

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueAnnotation = None
        # reference to Annotation: Annotation

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueAttachment = None
        # reference to Attachment: Attachment

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueIdentifier = None
        # reference to Identifier: Identifier

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueCodeableConcept = None
        # reference to CodeableConcept: CodeableConcept

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueCoding = None
        # reference to Coding: Coding

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueQuantity = None
        # reference to Quantity: Quantity

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDuration = None
        # reference to Duration: Duration

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueSimpleQuantity = None
        # reference to Quantity: Quantity

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDistance = None
        # reference to Distance: Distance

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueCount = None
        # reference to Count: Count

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueMoney = None
        # reference to Money: Money

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueAge = None
        # reference to Age: Age

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueRange = None
        # reference to Range: Range

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valuePeriod = None
        # reference to Period: Period

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueRatio = None
        # reference to Ratio: Ratio

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueReference = None
        # reference to Reference: identifier

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueSampledData = None
        # reference to SampledData: SampledData

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueSignature = None
        # reference to Signature: Signature

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueHumanName = None
        # reference to HumanName: HumanName

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueAddress = None
        # reference to Address: Address

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueContactPoint = None
        # reference to ContactPoint: ContactPoint

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueTiming = None
        # reference to Timing: Timing

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueMeta = None
        # reference to Meta: Meta

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueElementDefinition = None

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueContactDetail = None
        # reference to ContactDetail: ContactDetail

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueContributor = None
        # reference to Contributor: Contributor

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDosage = None
        # reference to Dosage: Dosage

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueRelatedArtifact = None
        # reference to RelatedArtifact: RelatedArtifact

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueUsageContext = None
        # reference to UsageContext: UsageContext

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueDataRequirement = None
        # reference to DataRequirement: DataRequirement

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueParameterDefinition = None
        # reference to ParameterDefinition: ParameterDefinition

        # the actual value for the element, which must be one of the types allowed
        # for this element.
        self.valueTriggerDefinition = None
        # reference to TriggerDefinition: TriggerDefinition

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def get_relationships(self):

        return [
            {'parent_entity': 'RelatedArtifact',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRelatedArtifact'},

            {'parent_entity': 'Annotation',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAnnotation'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueQuantity'},

            {'parent_entity': 'Extension',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueExtension'},

            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueReference'},

            {'parent_entity': 'ContactPoint',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContactPoint'},

            {'parent_entity': 'Dosage',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDosage'},

            {'parent_entity': 'TriggerDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueTriggerDefinition'},

            {'parent_entity': 'Timing',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueTiming'},

            {'parent_entity': 'Identifier',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueIdentifier'},

            {'parent_entity': 'Age',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAge'},

            {'parent_entity': 'HumanName',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueHumanName'},

            {'parent_entity': 'Signature',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSignature'},

            {'parent_entity': 'Ratio',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRatio'},

            {'parent_entity': 'Element',
             'parent_variable': 'id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueElement'},

            {'parent_entity': 'Duration',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDuration'},

            {'parent_entity': 'CodeableConcept',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCodeableConcept'},

            {'parent_entity': 'Coding',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCoding'},

            {'parent_entity': 'Meta',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueMeta'},

            {'parent_entity': 'Distance',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDistance'},

            {'parent_entity': 'UsageContext',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueUsageContext'},

            {'parent_entity': 'Address',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAddress'},

            {'parent_entity': 'Narrative',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueNarrative'},

            {'parent_entity': 'Contributor',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContributor'},

            {'parent_entity': 'ContactDetail',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueContactDetail'},

            {'parent_entity': 'Attachment',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueAttachment'},

            {'parent_entity': 'ParameterDefinition',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueParameterDefinition'},

            {'parent_entity': 'Count',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueCount'},

            {'parent_entity': 'Quantity',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSimpleQuantity'},

            {'parent_entity': 'Period',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valuePeriod'},

            {'parent_entity': 'BackboneElement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueBackboneElement'},

            {'parent_entity': 'DataRequirement',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueDataRequirement'},

            {'parent_entity': 'SampledData',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueSampledData'},

            {'parent_entity': 'Money',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueMoney'},

            {'parent_entity': 'Range',
             'parent_variable': 'object_id',
             'child_entity': 'ElementDefinition_Example',
             'child_variable': 'valueRange'},
        ]


class ElementDefinition_Constraint(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # allows identification of which elements have their cardinalities
        # impacted by the constraint.  will not be referenced for constraints that
        # do not affect cardinality.
        self.key = None
        # type = string

        # description of why this constraint is necessary or appropriate.
        self.requirements = None
        # type = string

        # identifies the impact constraint violation has on the conformance of the
        # instance.
        self.severity = None
        # type = string
        # possible values: error, warning

        # text that can be used to describe the constraint in messages identifying
        # that the constraint has been violated.
        self.human = None
        # type = string

        # a [fhirpath](http://hl7.org/fluentpath) expression of constraint that
        # can be executed to see if this constraint is met.
        self.expression = None
        # type = string

        # an xpath expression of constraint that can be executed to see if this
        # constraint is met.
        self.xpath = None
        # type = string

        # a reference to the original source of the constraint, for traceability
        # purposes.
        self.source = None
        # type = string

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.severity is not None:
            for value in self.severity:
                if value is not None and value.lower() not in [
                        'error', 'warning']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'error, warning'))


class ElementDefinition_Binding(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # indicates the degree of conformance expectations associated with this
        # binding - that is, the degree to which the provided value set must be
        # adhered to in the instances.
        self.strength = None
        # type = string
        # possible values: required, extensible, preferred, example

        # describes the intended use of this particular set of codes.
        self.description = None
        # type = string

        # points to the value set or external definition (e.g. implicit value set)
        # that identifies the set of codes to be used. if the binding refers to an
        # explicit value set - the normal case - then use a reference(valueset)
        # preferably containing the canonical url for the value set. if the
        # reference is to an implicit value set - usually, an ietf rfc that
        # defines a grammar, such as mime types - then use a uri.
        self.valueSetUri = None
        # type = string

        # points to the value set or external definition (e.g. implicit value set)
        # that identifies the set of codes to be used. if the binding refers to an
        # explicit value set - the normal case - then use a reference(valueset)
        # preferably containing the canonical url for the value set. if the
        # reference is to an implicit value set - usually, an ietf rfc that
        # defines a grammar, such as mime types - then use a uri.
        self.valueSetReference = None
        # reference to Reference: identifier

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)

    def assert_type(self):

        if self.strength is not None:
            for value in self.strength:
                if value is not None and value.lower() not in [
                        'required', 'extensible', 'preferred', 'example']:
                    raise ValueError('"{}" does not match possible values: {}'.format(
                        value, 'required, extensible, preferred, example'))

    def get_relationships(self):

        return [
            {'parent_entity': 'Reference',
             'parent_variable': 'identifier',
             'child_entity': 'ElementDefinition_Binding',
             'child_variable': 'valueSetReference'},
        ]


class ElementDefinition_Mapping(fhirbase):
    """Captures constraints on each element within the resource, profile, or
    extension.
    """

    def __init__(self, dict_values=None):
        # an internal reference to the definition of a mapping.
        self.identity = None
        # type = string

        # identifies the computable language in which mapping.map is expressed.
        self.language = None
        # type = string

        # expresses what part of the target specification corresponds to this
        # element.
        self.map = None
        # type = string

        # comments that provide information about the mapping or its use.
        self.comment = None
        # type = string

        # unique identifier for object class
        self.object_id = None

        if dict_values:
            self.set_attributes(dict_values)
